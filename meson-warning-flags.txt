# This file contains a bunch of warning flags used for the uberpedantic mode
# (-Duberpedantic=true in Meson); some of them implemented only by GCC, some
# only by Clang, and others by both.

-Wabstract-vbase-init
-Waddress-of-temporary
-Wall
-Walloca
-Wanon-enum-enum-conversion
-Wargument-outside-range
-Warray-bounds=2
-Warray-bounds-pointer-arithmetic
-Warray-parameter
-Warray-parameter=2
-Wasm
-Wassign-enum
-Watomic-access
-Watomic-implicit-seq-cst
-Watomic-properties
-Wattribute-alias
-Wattribute-statement
-Wauto-decl-extensions
-Wbad-function-cast
-Wbidi-chars=any
-Wbitfield-enum-conversion
-Wbit-int-extension
-Wbitwise-instead-of-logical
-Wbitwise-op-parentheses
-Wbool-conversions
-Wbool-operation
-Wcalled-once-parameter
#-Wcast-align
-Wcast-function-type
-Wcast-function-type-mismatch
-Wcast-function-type-strict
-Wcast-qual
-Wcatch-value=3
-Wchanges-meaning
-Wchar-subscripts
-WCL4
-Wclass-conversion
-Wclass-varargs
-Wcomma-subscript
-Wcomment
-Wcomments
-Wcompletion-handler
-Wcomplex-component-init
-Wcompound-token-split
-Wcompound-token-split-by-space
-Wconditionally-supported
-Wconditional-uninitialized
-Wconsumed
-Wconversion-null
-Wcovered-switch-default
-Wcpp
-Wcstring-format-directive
-Wctor-dtor-privacy
-Wcustom-atomic-properties
-Wdate-time
-Wdeclaration-after-statement
-Wdefaulted-function-deleted
-Wdelegating-ctor-cycles
-Wdelete-incomplete
-Wdelete-non-abstract-non-virtual-dtor
-Wdelete-non-virtual-dtor
-Wdelimited-escape-sequence-extension
-Wdeprecated
-Wdeprecated-copy
-Wdeprecated-copy-dtor
-Wdeprecated-copy-with-dtor
-Wdeprecated-copy-with-user-provided-copy
-Wdeprecated-copy-with-user-provided-dtor
-Wdeprecated-dynamic-exception-spec
-Wdeprecated-enum-enum-conversion
-Wdeprecated-enum-float-conversion
-Wdeprecated-implementations
-Wdeprecated-literal-operator
-Wdeprecated-redundant-constexpr-static-def
-Wdeprecated-variadic-comma-omission
-Wdeprecated-writable-strings
-Wdirect-ivar-access
-Wdisabled-macro-expansion
-Wdisabled-optimization
-Wdiv-by-zero
-Wdocumentation
-Wdocumentation-deprecated-sync
-Wdocumentation-html
-Wdocumentation-pedantic
-Wdocumentation-unknown-command
-Wdollar-in-identifier-extension
-Wdouble-promotion
-Wdtor-name
-Wdtor-typedef
-Wduplicated-branches
-Wduplicated-cond
-Wduplicate-decl-specifier
-Wduplicate-enum
-Wduplicate-method-arg
-Wduplicate-method-match
-Wdynamic-exception-spec
-Welaborated-enum-base
-Welaborated-enum-class
-Wembedded-directive
-Wempty-init-stmt
-Wempty-translation-unit
-Wendif-labels
-Wenum-compare-conditional
-Wenum-conversion
-Wenum-enum-conversion
-Wenum-float-conversion
-Wexceptions
-Wexit-time-destructors
-Wexpansion-to-defined
-Wexplicit-ownership-type
-Wextraneous-template-head
-Wextra-semi
-Wextra-semi-stmt
-Wflexible-array-extensions
-Wfloat-equal
-Wfloat-overflow-conversion
-Wfloat-zero-conversion
-Wfor-loop-analysis
-Wformat
-Wformat=2
-Wformat-non-iso
-Wformat-nonliteral
-Wformat-overflow=2
-Wformat-pedantic
-Wformat-security
-Wformat-signedness
-Wformat-truncation=2
-Wformat-type-confusion
-Wformat-y2k
-Wfour-char-constants
-Wframe-address
-Wfunction-effects
-Wgcc-compat
-Wglobal-module
-Wgnu
-Wgnu-anonymous-struct
-Wgnu-array-member-paren-init
-Wgnu-auto-type
-Wgnu-case-range
-Wgnu-complex-integer
-Wgnu-compound-literal-initializer
-Wgnu-conditional-omitted-operand
-Wgnu-designator
-Wgnu-empty-struct
-Wgnu-flexible-array-initializer
-Wgnu-flexible-array-union-member
-Wgnu-folding-constant
-Wgnu-imaginary-constant
-Wgnu-include-next
-Wgnu-label-as-value
-Wgnu-line-marker
-Wgnu-null-pointer-arithmetic
-Wgnu-pointer-arith
-Wgnu-redeclared-enum
-Wgnu-statement-expression
-Wgnu-statement-expression-from-macro-expansion
-Wgnu-union-cast
-Wgnu-zero-line-directive
-Wgnu-zero-variadic-macro-arguments
-Widiomatic-parentheses
-Wignored-base-class-qualifiers
-Wignored-qualifiers
-Wimplicit
-Wimplicit-atomic-properties
-Wimplicit-fallthrough
-Wimplicit-fallthrough=5
-Wimplicit-fallthrough-per-function
-Wimplicit-function-declaration
-Wimplicit-int
-Wimplicit-retain-self
-Wimplicit-void-ptr-cast
-Wimport
-Wimport-preprocessor-directive-pedantic
-Winaccessible-base
-Wincompatible-function-pointer-types
-Wincompatible-function-pointer-types-strict
-Wincompatible-ms-struct
-Wincomplete-module
-Winconsistent-missing-destructor-override
-Winfinite-recursion
-Winherited-variadic-ctor
-Winit-list-lifetime
-Winit-self
-Wint-conversion
-Wint-conversions
-Wint-in-bool-context
-Winvalid-constexpr
-Winvalid-gnu-asm-cast
-Winvalid-ios-deployment-target
-Winvalid-offsetof
-Winvalid-or-nonexistent-directory
-Winvalid-partial-specialization
-Winvalid-pch
-Winvalid-specialization
-Winvalid-static-assert-message
-Winvalid-token-paste
-Winvalid-utf8
-Wjump-misses-init
-Wkeyword-macro
-Wlanguage-extension-token
-Wliteral-suffix
-Wlogical-op
-Wlogical-op-parentheses
-Wloop-analysis
-Wmain
-Wmain-return-type
-Wmax-tokens
-Wmethod-signatures
-Wmisleading-indentation
-Wmismatched-tags
-Wmissing-designated-field-initializers
-Wmissing-field-initializers
-Wmissing-format-attribute
-Wmissing-include-dirs
-Wmissing-method-return-type
-Wmissing-noreturn
-Wmissing-requires
-Wmissing-template-arg-list-after-template-kw
-Wmissing-template-keyword
-Wmissing-variable-declarations
-Wmodule-import-in-extern-c
-Wmodules-import-nested-redundant
-Wmove
-Wmultichar
-Wnested-anon-types
-Wnewline-eof
-Wnoexcept
-Wnoexcept-type
-Wnon-modular-include-in-framework-module
-Wnon-modular-include-in-module
-Wnon-pod-varargs
-Wnonportable-private-system-apinotes-path
-Wnonportable-system-include-path
-Wnon-template-friend
-Wnon-virtual-dtor
-Wnormalized
-Wnullability-declspec
-Wnullability-extension
-Wnullable-to-nonnull-conversion
-Wnull-pointer-arithmetic
-Wnull-pointer-subtraction
-Wopenmp
-Wout-of-line-declaration
-Wover-aligned
-Woverflow
-Woverlength-strings
-Woverloaded-virtual
-Woverloaded-virtual=2
-Woverride-init
-Woverriding-method-mismatch
-Wpacked
-Wpacked-bitfield-compat
-Wpacked-non-pod
-Wparentheses
-Wpartial-availability
-Wperf-constraint-implies-noexcept
-Wpessimizing-move
-Wplacement-new=2
-Wpmf-conversions
-Wpointer-arith
-Wpoison-system-directories
-Wpragma-pack
-Wpragma-pack-suspicious-include
-Wpragmas
-Wpreferred-type-bitfield-width
-Wprivate-header
-Wprofile-instr-missing
-Wquoted-include-in-framework-header
-Wrange-loop-analysis
-Wrange-loop-bind-reference
-Wrange-loop-construct
-Wreceiver-forward-class
-Wredundant-move
-Wredundant-parens
-Wreorder
-Wreorder-ctor
-Wreserved-attribute-identifier
-Wreserved-identifier
-Wreserved-id-macro
-Wreserved-macro-identifier
-Wreserved-user-defined-literal
-Wretained-language-linkage
-Wreturn-local-addr
-Wreturn-mismatch
-Wself-assign
-Wself-assign-overloaded
-Wself-move
-Wsemicolon-before-method-body
-Wsequence-point
-Wshift-bool
-Wshift-overflow=2
-Wshift-sign-overflow
-Wsign-compare
-Wsigned-enum-bitfield
-Wsigned-unsigned-wchar
-Wsign-promo
-Wsometimes-uninitialized
-Wstatic-in-inline
-Wstrict-aliasing=3
-Wstrict-null-sentinel
-Wstrict-overflow=1
-Wstrict-primary-template-shadow
-Wstrict-prototypes
-Wstring-concatenation
-Wsuggest-attribute=cold
-Wsuggest-attribute=format
-Wsuggest-attribute=malloc
-Wsuggest-attribute=noreturn
-Wsuggest-attribute=returns_nonnull
-Wsuggest-destructor-override
-Wsuggest-override
-Wsuper-class-method-mismatch
-Wswitch-enum
-Wsynth
-Wtautological-bitwise-compare
-Wtautological-compare
-Wtautological-constant-in-range-compare
-Wtautological-negation-compare
-Wtautological-overlap-compare
-Wtautological-type-limit-compare
-Wtautological-unsigned-char-zero-compare
-Wtautological-unsigned-enum-zero-compare
-Wtautological-unsigned-zero-compare
-Wtautological-value-range-compare
-Wtemplate-id-cdtor
-Wtentative-definition-compat
-Wtentative-definition-incomplete-type
-Wterminate
-Wthread-safety
-Wthread-safety-analysis
-Wthread-safety-attributes
-Wthread-safety-beta
-Wthread-safety-negative
-Wthread-safety-pointer
-Wthread-safety-precise
-Wthread-safety-reference
-Wthread-safety-reference-return
-Wthread-safety-verbose
-Wtrampolines
-Wtrivial-auto-var-init
-Wtype-limits
-Wunaligned-access
-Wundef
-Wundefined-func-template
-Wundefined-internal-type
-Wundef-prefix
-Wunguarded-availability
-Wuninitialized
-Wuninitialized-const-reference
-Wunique-object-duplication
-Wunnecessary-virtual-specifier
-Wunneeded-internal-declaration
-Wunneeded-member-function
-Wunreachable-code
-Wunreachable-code-aggressive
-Wunreachable-code-break
-Wunreachable-code-fallthrough
-Wunreachable-code-loop-increment
-Wunreachable-code-return
-Wunsafe-buffer-usage-in-libc-call
-Wunsafe-loop-optimizations
-Wunsupported-dll-base-class-template
-Wunterminated-string-initialization
-Wunusable-partial-specialization
-Wunused
-Wunused-but-set-parameter
-Wunused-but-set-variable
-Wunused-const-variable
-Wunused-const-variable=2
-Wunused-exception-parameter
-Wunused-function
-Wunused-label
-Wunused-lambda-capture
-Wunused-local-typedef
-Wunused-local-typedefs
-Wunused-macros
-Wunused-member-function
-Wunused-parameter
-Wunused-private-field
-Wunused-property-ivar
-Wunused-template
-Wunused-variable
-Wuse-after-free=3
-Wused-but-marked-unused
-Wuseless-cast
-Wvariadic-macro-arguments-omitted
-Wvariadic-macros
-Wvec-elem-size
-Wvector-conversion
-Wvector-conversions
-Wvector-operation-performance
-Wvexing-parse
-Wvirtual-inheritance
-Wvirtual-move-assign
-Wvla
-Wvla-cxx-extension
-Wvla-extension
-Wvla-extension-static-assert
-Wvolatile
-Wvolatile-register-var
-Wweak-template-vtables
-Wweak-vtables
-Wwrite-strings
-Wzero-as-null-pointer-constant
-Wzero-length-array

# Clang's -Wmissing-braces is more reasonable than GCC's; the latter requires
# e.g. double braces around std::array initializers, which is silly.
clang: -Wmissing-braces

# Clang does not support side-effects in assumptions and warns on every such
# usage. https://github.com/llvm/llvm-project/issues/91612
clang: -Wno-assume
